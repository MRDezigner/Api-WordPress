/*
* Ativar a compactação GZIP no servidor 
*/
// Localize o arquivo .htaccess, geralmente fica na raiz,
// clique duas vezes sobre ele e mande editar, após aberto depois da última linha cole o seguinte código:

# inicio compressão GZIP
<ifModule mod_deflate.c>
    <filesMatch "\.(js|css|html|php)$">
        AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript
    </filesMatch>
 </ifModule>
# Fim compressão GZIP

// Após reenviar o arquivo para o servidor cheque se realmente a compressão foi ativada acessando o site: 
// http://checkgzipcompression.com/ lá será mostrado o tamanho do site com e sem compressão, 
// você vai tomar um susto quando ver a diferença.

/*
* Ativar o recurso de cache utilizando o .htaccess
*/

# COMEÇA BROWSER CACHE

<IfModule mod_expires.c>
ExpiresActive On
ExpiresByType image/jpg “access plus 1 year”
ExpiresByType image/jpeg “access plus 1 year”
ExpiresByType image/gif “access plus 1 year”
ExpiresByType image/png “access plus 1 year”
ExpiresByType text/css “access plus 1 month”
ExpiresByType application/pdf “access plus 1 month”
ExpiresByType text/x-javascript “access plus 1 month”
ExpiresByType application/x-shockwave-flash “access plus 1 month”
ExpiresByType image/x-icon “access plus 1 year”
ExpiresByType application/javascript “access plus 1 month”
ExpiresDefault “access plus 2 days”
</IfModule>

# TERMINA BROWSER CACHE

/*
* Plugins de mais atrapalham o carregamento do site
*/

// Nunca utilize mais de 10 plugins em seu WordPress

/*
* Plugin de compressão para HTML, Java Script e CSS
*/

// Instale o plugin WP Minify [https://wordpress.org/plugins/wp-minify/] 
// para fazer a compressão e a remoção de códigos duplicados do WordPress

/*
* Imagens as grandes devoradoras de banda (tráfego)
*/

// Instale o plugin WP Smush [https://wordpress.org/plugins/wp-smushit/] ele faz a compressão
// das imagens aliviando bastante o consumo no carregamento das mesmas.

/* 
* Redundância e flexibilidade, CloudFlare é a cartada final
*/

// O Cloudflare é um serviço que funciona como um proxy (intermediário) 
// espelhando o seu site em diversas partes do mundo
// O carregamento do seu WordPress sofrerá um visível aumento de performance.

/*
* Serving pre-compressed content
*/

<IfModule mod_headers.c>
    # Serve gzip compressed CSS files if they exist 
    # and the client accepts gzip.
    RewriteCond "%{HTTP:Accept-encoding}" "gzip"
    RewriteCond "%{REQUEST_FILENAME}\.gz" -s
    RewriteRule "^(.*)\.css" "$1\.css\.gz" [QSA]

    # Serve gzip compressed JS files if they exist 
    # and the client accepts gzip.
    RewriteCond "%{HTTP:Accept-encoding}" "gzip"
    RewriteCond "%{REQUEST_FILENAME}\.gz" -s
    RewriteRule "^(.*)\.js" "$1\.js\.gz" [QSA]


    # Serve correct content types, and prevent mod_deflate double gzip.
    RewriteRule "\.css\.gz$" "-" [T=text/css,E=no-gzip:1]
    RewriteRule "\.js\.gz$" "-" [T=text/javascript,E=no-gzip:1]


    <FilesMatch "(\.js\.gz|\.css\.gz)$">
      # Serve correct encoding type.
      Header append Content-Encoding gzip

      # Force proxies to cache gzipped & 
      # non-gzipped css/js files separately.
      Header append Vary Accept-Encoding
    </FilesMatch>
</IfModule>

<IfModule mod_deflate.c>
AddOutputFilterByType DEFLATE text/plain
AddOutputFilterByType DEFLATE text/xml
AddOutputFilterByType DEFLATE application/xhtml+xml
AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/xml
AddOutputFilterByType DEFLATE image/svg+xml
AddOutputFilterByType DEFLATE application/rss+xml
AddOutputFilterByType DEFLATE application/atom_xml
AddOutputFilterByType DEFLATE application/x-javascript
AddOutputFilterByType DEFLATE application/javascript
AddOutputFilterByType DEFLATE application/x-httpd-php
AddOutputFilterByType DEFLATE application/x-httpd-fastphp
AddOutputFilterByType DEFLATE application/x-httpd-eruby
AddOutputFilterByType DEFLATE text/html

SetOutputFilter DEFLATE

BrowserMatch ^Mozilla/4 gzip-only-text/html

BrowserMatch ^Mozilla/4.0[678] no-gzip

BrowserMatch ^HMSI[E] !no-gzip !gzip-only-text/html

SetEnvIfNoCase Request_URI .(?:gif|jpe?g|png)$ no-gzip dont-vary
</IfModule>
